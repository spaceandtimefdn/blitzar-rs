name: Test-Check-Lint

on:
  workflow_call:
  pull_request:
    types:
      - opened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format-code:
    name: Check Code
    runs-on: self-hosted
    steps:
      - name: Checkout Code Format
        uses: actions/checkout@v3
      - run: docker run --rm -v "$PWD":/src:ro -w /src --privileged rust:1.76 /bin/bash -c "cp -av /src/ /src_tmp/; cd /src_tmp; rustup component add rustfmt; cargo fmt --all -- --check"

  clippy-code:
    name: Clippy Code
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - run: docker run --rm -v "$PWD":/src:ro -w /src --privileged rust:1.76 /bin/bash -c "cp -av /src/ /src_tmp/; cd /src_tmp; rustup component add clippy; cargo clippy --all-targets --all-features -- -D warnings"

  test-cpu:
    name: Test the CPU backend
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - run: docker run --rm -v "$PWD":/src:ro -w /src --privileged rust:1.76 /bin/bash -c "cp -av /src/ /src_tmp/; cd /src_tmp; cargo test --features cpu"

  test-gpu:
    name: Test the GPU backend
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - run: docker run --rm -v "$PWD":/src:ro -w /src --gpus all --privileged rust:1.76 /bin/bash -c "nvidia-smi"
      - run: docker run --rm -v "$PWD":/src:ro -w /src --gpus all --privileged rust:1.76 /bin/bash -c "cp -av /src/ /src_tmp/; cd /src_tmp; cargo test --features gpu"
